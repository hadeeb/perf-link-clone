{"version":3,"file":"chunk-797fe19b.js","sources":["../src/utils/workerize.js","../src/utils/index.js"],"sourcesContent":["/**\n * @license MIT\n * @see https://github.com/developit/workerize/blob/683631f402443d71484b03d087b37c72e65f2e3d/package.json\n * @author Jason Miller <jason@developit.ca> (http://jasonformat.com)\n */\nexport default function workerize(code, options) {\n  let exports = {};\n  let exportsObjName = `__xpo${Math.random()\n    .toString()\n    .substring(2)}__`;\n  if (typeof code === \"function\")\n    code = `(${Function.prototype.toString.call(code)})(${exportsObjName})`;\n  code =\n    toCjs(code, exportsObjName, exports) +\n    `\\n(${Function.prototype.toString.call(setup)})(self,${exportsObjName},{})`;\n  let url = URL.createObjectURL(new Blob([code])),\n    worker = new Worker(url, options),\n    term = worker.terminate,\n    callbacks = {},\n    counter = 0,\n    i;\n  worker.kill = signal => {\n    worker.postMessage({ type: \"KILL\", signal });\n    setTimeout(worker.terminate);\n  };\n  worker.terminate = () => {\n    URL.revokeObjectURL(url);\n    term.call(worker);\n  };\n  worker.call = (method, params) =>\n    new Promise((resolve, reject) => {\n      let id = `rpc${++counter}`;\n      callbacks[id] = [resolve, reject];\n      worker.postMessage({ type: \"RPC\", id, method, params });\n    });\n  worker.rpcMethods = {};\n  setup(worker, worker.rpcMethods, callbacks);\n  worker.expose = methodName => {\n    worker[methodName] = function() {\n      return worker.call(methodName, [].slice.call(arguments));\n    };\n  };\n  for (i in exports) if (!(i in worker)) worker.expose(i);\n  return worker;\n}\n\nfunction setup(ctx, rpcMethods, callbacks) {\n  ctx.addEventListener(\"message\", ({ data }) => {\n    let id = data.id;\n    if (data.type !== \"RPC\" || id == null) return;\n    if (data.method) {\n      let method = rpcMethods[data.method];\n      if (method == null) {\n        ctx.postMessage({ type: \"RPC\", id, error: \"NO_SUCH_METHOD\" });\n      } else {\n        Promise.resolve()\n          .then(() => method.apply(null, data.params))\n          .then(result => {\n            ctx.postMessage({ type: \"RPC\", id, result });\n          })\n          .catch(err => {\n            ctx.postMessage({ type: \"RPC\", id, error: \"\" + err });\n          });\n      }\n    } else {\n      let callback = callbacks[id];\n      if (callback == null) throw Error(`Unknown callback ${id}`);\n      delete callbacks[id];\n      if (data.error) callback[1](Error(data.error));\n      else callback[0](data.result);\n    }\n  });\n}\n\nfunction toCjs(code, exportsObjName, exports) {\n  code = code.replace(/^(\\s*)export\\s+default\\s+/m, (s, before) => {\n    exports.default = true;\n    return `${before}${exportsObjName}.default=`;\n  });\n  code = code.replace(\n    /^(\\s*)export\\s+((?:async\\s*)?function(?:\\s*\\*)?|const|let|var)(\\s+)([a-zA-Z$_][a-zA-Z0-9$_]*)/gm,\n    (s, before, type, ws, name) => {\n      exports[name] = true;\n      return `${before}${exportsObjName}.${name}=${type}${ws}${name}`;\n    }\n  );\n  return `var ${exportsObjName}={};\\n${code}\\n${exportsObjName};`;\n}\n","import workerize from \"./workerize\";\n\nconst iterations = 100;\n\nexport const round = num => parseFloat(num).toFixed(0);\nconst median = xs => xs.sort()[Math.ceil(xs.length / 2)];\n\nexport const msToμs = num => Math.floor(num * 1000);\n\nexport async function run(test) {\n  const times = [];\n  try {\n    let done = iterations;\n    while (done > 0) {\n      let time = eval(\n        `()=> {${test.before};let start = performance.now();${\n          test.code\n        };let end = performance.now();return end - start;}`\n      )();\n      times.push(time);\n      done--;\n    }\n    return {\n      error: false,\n      median: median(times)\n    };\n  } catch (e) {\n    return {\n      error: true,\n      median: 0\n    };\n  }\n}\n\nexport async function runInWorker(test) {\n  const code = `function run() {try{${\n    test.before\n  };let start = performance.now();${\n    test.code\n  };let end = performance.now();return end - start;}catch(e){return -1}}`;\n\n  try {\n    eval(code);\n  } catch (e) {\n    return {\n      error: true,\n      median: 0\n    };\n  }\n\n  const worker = workerize(`export ${code}`);\n  const times = [];\n\n  let done = iterations;\n  let err = false;\n  while (done > 0) {\n    let time = await worker.run();\n    if (time < 0) {\n      err = true;\n      break;\n    }\n    times.push(time);\n    done--;\n  }\n\n  worker.terminate();\n\n  if (err) {\n    return {\n      error: true,\n      median: 0\n    };\n  } else {\n    return {\n      error: false,\n      median: median(times)\n    };\n  }\n}\n\nexport function setHash(before, codes) {\n  location.hash = `#/${btoa(before)}/${btoa(JSON.stringify(codes))}`;\n}\n\nexport function debounce(func, wait) {\n  var timeout;\n  return function() {\n    var context = this,\n      args = arguments;\n    var later = function() {\n      timeout = null;\n      func.apply(context, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n"],"names":["workerize","code","options","exports","exportsObjName","Math","random","toString","substring","Function","prototype","call","toCjs","setup","i","url","URL","createObjectURL","Blob","worker","Worker","term","terminate","callbacks","counter","kill","signal","postMessage","type","setTimeout","revokeObjectURL","method","params","Promise","resolve","reject","id","rpcMethods","expose","methodName","slice","arguments","ctx","addEventListener","data","error","then","apply","result","catch","err","callback","Error","replace","s","before","default","ws","name","iterations","median","xs","sort","ceil","length","msToμs","num","floor","async","run","test","times","done","time","eval","push","e","runInWorker","setHash","codes","location","hash","btoa","JSON","stringify","debounce","func","wait","timeout","context","this","args","clearTimeout"],"mappings":"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"}